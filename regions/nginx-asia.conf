worker_processes auto;

events {
    worker_connections 1024;
}

http {
    lua_shared_dict health_status 1m;  # Shared memory for tracking health
    resolver 127.0.0.11 valid=30s;

    init_worker_by_lua_block {
        local health = ngx.shared.health_status
        health:set("edge_asia_1", 10)  -- Initial weight
        health:set("edge_asia_2", 10)
        health:set("edge_asia_3", 10)
    }

    upstream asia_edge_servers {
        server edge_asia_1:80;
        server edge_asia_2:80;
        server edge_asia_3:80;
    }

    server {
        listen 80;

        location / {
            set_by_lua_block $target {
                local health = ngx.shared.health_status
                local servers = {"edge_asia_1", "edge_asia_2", "edge_asia_3"}
                local best_server, best_weight = nil, -1
                
                for _, server in ipairs(servers) do
                    local weight = health:get(server) or 1
                    if weight > best_weight then
                        best_server, best_weight = server, weight
                    end
                end
                
                return best_server
            }

            proxy_pass http://$target;  # Ensure $target is set to a valid server
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
